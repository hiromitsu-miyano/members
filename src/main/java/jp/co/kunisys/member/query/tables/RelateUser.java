/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.RelateUserRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 連係用ユーザ情報
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelateUser extends TableImpl<RelateUserRecord> {

	private static final long serialVersionUID = 505382415;

	/**
	 * The reference instance of <code>members.relate_user</code>
	 */
	public static final RelateUser RELATE_USER = new RelateUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RelateUserRecord> getRecordType() {
		return RelateUserRecord.class;
	}

	/**
	 * The column <code>members.relate_user.id</code>. ID
	 */
	public final TableField<RelateUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "ID");

	/**
	 * The column <code>members.relate_user.user_id</code>. ユーザID
	 */
	public final TableField<RelateUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "ユーザID");

	/**
	 * The column <code>members.relate_user.zaimu_user_id</code>. 財務ユーザID
	 */
	public final TableField<RelateUserRecord, String> ZAIMU_USER_ID = createField("zaimu_user_id", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "財務ユーザID");

	/**
	 * Create a <code>members.relate_user</code> table reference
	 */
	public RelateUser() {
		this("relate_user", null);
	}

	/**
	 * Create an aliased <code>members.relate_user</code> table reference
	 */
	public RelateUser(String alias) {
		this(alias, RELATE_USER);
	}

	private RelateUser(String alias, Table<RelateUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private RelateUser(String alias, Table<RelateUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "連係用ユーザ情報");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RelateUserRecord> getPrimaryKey() {
		return Keys.KEY_RELATE_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RelateUserRecord>> getKeys() {
		return Arrays.<UniqueKey<RelateUserRecord>>asList(Keys.KEY_RELATE_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RelateUser as(String alias) {
		return new RelateUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RelateUser rename(String name) {
		return new RelateUser(name, null);
	}
}
