/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.AnalysisProjectRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 分析プロジェクト
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisProject extends TableImpl<AnalysisProjectRecord> {

	private static final long serialVersionUID = -1628404313;

	/**
	 * The reference instance of <code>members.analysis_project</code>
	 */
	public static final AnalysisProject ANALYSIS_PROJECT = new AnalysisProject();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AnalysisProjectRecord> getRecordType() {
		return AnalysisProjectRecord.class;
	}

	/**
	 * The column <code>members.analysis_project.project_code</code>. プロジェクトコード
	 */
	public final TableField<AnalysisProjectRecord, String> PROJECT_CODE = createField("project_code", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "プロジェクトコード");

	/**
	 * The column <code>members.analysis_project.project_name</code>. プロジェクト名
	 */
	public final TableField<AnalysisProjectRecord, String> PROJECT_NAME = createField("project_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "プロジェクト名");

	/**
	 * The column <code>members.analysis_project.manager_code</code>. 担当者
	 */
	public final TableField<AnalysisProjectRecord, String> MANAGER_CODE = createField("manager_code", org.jooq.impl.SQLDataType.VARCHAR.length(6), this, "担当者");

	/**
	 * The column <code>members.analysis_project.busho_code</code>. 担当部署
	 */
	public final TableField<AnalysisProjectRecord, String> BUSHO_CODE = createField("busho_code", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "担当部署");

	/**
	 * The column <code>members.analysis_project.customer_code</code>. 発注先
	 */
	public final TableField<AnalysisProjectRecord, String> CUSTOMER_CODE = createField("customer_code", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "発注先");

	/**
	 * The column <code>members.analysis_project.status_name</code>. 状態名
	 */
	public final TableField<AnalysisProjectRecord, String> STATUS_NAME = createField("status_name", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "状態名");

	/**
	 * The column <code>members.analysis_project.span_from</code>. 工期From
	 */
	public final TableField<AnalysisProjectRecord, Date> SPAN_FROM = createField("span_from", org.jooq.impl.SQLDataType.DATE, this, "工期From");

	/**
	 * The column <code>members.analysis_project.span_to</code>. 工期To
	 */
	public final TableField<AnalysisProjectRecord, Date> SPAN_TO = createField("span_to", org.jooq.impl.SQLDataType.DATE, this, "工期To");

	/**
	 * The column <code>members.analysis_project.regist_user</code>. 登録担当者
	 */
	public final TableField<AnalysisProjectRecord, String> REGIST_USER = createField("regist_user", org.jooq.impl.SQLDataType.VARCHAR.length(6), this, "登録担当者");

	/**
	 * Create a <code>members.analysis_project</code> table reference
	 */
	public AnalysisProject() {
		this("analysis_project", null);
	}

	/**
	 * Create an aliased <code>members.analysis_project</code> table reference
	 */
	public AnalysisProject(String alias) {
		this(alias, ANALYSIS_PROJECT);
	}

	private AnalysisProject(String alias, Table<AnalysisProjectRecord> aliased) {
		this(alias, aliased, null);
	}

	private AnalysisProject(String alias, Table<AnalysisProjectRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "分析プロジェクト");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AnalysisProjectRecord> getPrimaryKey() {
		return Keys.KEY_ANALYSIS_PROJECT_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AnalysisProjectRecord>> getKeys() {
		return Arrays.<UniqueKey<AnalysisProjectRecord>>asList(Keys.KEY_ANALYSIS_PROJECT_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisProject as(String alias) {
		return new AnalysisProject(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AnalysisProject rename(String name) {
		return new AnalysisProject(name, null);
	}
}
