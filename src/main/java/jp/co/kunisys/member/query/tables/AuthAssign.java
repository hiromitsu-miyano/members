/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.AuthAssignRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 権限割当
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthAssign extends TableImpl<AuthAssignRecord> {

	private static final long serialVersionUID = -1678920360;

	/**
	 * The reference instance of <code>members.auth_assign</code>
	 */
	public static final AuthAssign AUTH_ASSIGN = new AuthAssign();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AuthAssignRecord> getRecordType() {
		return AuthAssignRecord.class;
	}

	/**
	 * The column <code>members.auth_assign.auth_cd</code>. 権限コード
	 */
	public final TableField<AuthAssignRecord, String> AUTH_CD = createField("auth_cd", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "権限コード");

	/**
	 * The column <code>members.auth_assign.auth_function_cd</code>. 機能権限コード
	 */
	public final TableField<AuthAssignRecord, String> AUTH_FUNCTION_CD = createField("auth_function_cd", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false).defaulted(true), this, "機能権限コード");

	/**
	 * The column <code>members.auth_assign.auth_assign</code>. 権限付与
	 */
	public final TableField<AuthAssignRecord, Byte> AUTH_ASSIGN_ = createField("auth_assign", org.jooq.impl.SQLDataType.TINYINT, this, "権限付与");

	/**
	 * Create a <code>members.auth_assign</code> table reference
	 */
	public AuthAssign() {
		this("auth_assign", null);
	}

	/**
	 * Create an aliased <code>members.auth_assign</code> table reference
	 */
	public AuthAssign(String alias) {
		this(alias, AUTH_ASSIGN);
	}

	private AuthAssign(String alias, Table<AuthAssignRecord> aliased) {
		this(alias, aliased, null);
	}

	private AuthAssign(String alias, Table<AuthAssignRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "権限割当");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AuthAssignRecord> getPrimaryKey() {
		return Keys.KEY_AUTH_ASSIGN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AuthAssignRecord>> getKeys() {
		return Arrays.<UniqueKey<AuthAssignRecord>>asList(Keys.KEY_AUTH_ASSIGN_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthAssign as(String alias) {
		return new AuthAssign(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AuthAssign rename(String name) {
		return new AuthAssign(name, null);
	}
}
