/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.IsmsOutsideDocRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 外部文書台帳
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IsmsOutsideDoc extends TableImpl<IsmsOutsideDocRecord> {

	private static final long serialVersionUID = 1587441702;

	/**
	 * The reference instance of <code>members.isms_outside_doc</code>
	 */
	public static final IsmsOutsideDoc ISMS_OUTSIDE_DOC = new IsmsOutsideDoc();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IsmsOutsideDocRecord> getRecordType() {
		return IsmsOutsideDocRecord.class;
	}

	/**
	 * The column <code>members.isms_outside_doc.asset_id</code>. 資産ID
	 */
	public final TableField<IsmsOutsideDocRecord, Long> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "資産ID");

	/**
	 * The column <code>members.isms_outside_doc.outside_doc_id</code>. 外部文書ID
	 */
	public final TableField<IsmsOutsideDocRecord, Integer> OUTSIDE_DOC_ID = createField("outside_doc_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "外部文書ID");

	/**
	 * The column <code>members.isms_outside_doc.outside_doc_no</code>. 外部文書番号
	 */
	public final TableField<IsmsOutsideDocRecord, String> OUTSIDE_DOC_NO = createField("outside_doc_no", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "外部文書番号");

	/**
	 * Create a <code>members.isms_outside_doc</code> table reference
	 */
	public IsmsOutsideDoc() {
		this("isms_outside_doc", null);
	}

	/**
	 * Create an aliased <code>members.isms_outside_doc</code> table reference
	 */
	public IsmsOutsideDoc(String alias) {
		this(alias, ISMS_OUTSIDE_DOC);
	}

	private IsmsOutsideDoc(String alias, Table<IsmsOutsideDocRecord> aliased) {
		this(alias, aliased, null);
	}

	private IsmsOutsideDoc(String alias, Table<IsmsOutsideDocRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "外部文書台帳");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<IsmsOutsideDocRecord> getPrimaryKey() {
		return Keys.KEY_ISMS_OUTSIDE_DOC_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<IsmsOutsideDocRecord>> getKeys() {
		return Arrays.<UniqueKey<IsmsOutsideDocRecord>>asList(Keys.KEY_ISMS_OUTSIDE_DOC_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IsmsOutsideDoc as(String alias) {
		return new IsmsOutsideDoc(alias, this);
	}

	/**
	 * Rename this table
	 */
	public IsmsOutsideDoc rename(String name) {
		return new IsmsOutsideDoc(name, null);
	}
}
