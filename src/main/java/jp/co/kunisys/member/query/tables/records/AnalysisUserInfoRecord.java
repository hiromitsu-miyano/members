/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables.records;


import javax.annotation.Generated;

import jp.co.kunisys.member.query.tables.AnalysisUserInfo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 分析ユーザ情報
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisUserInfoRecord extends UpdatableRecordImpl<AnalysisUserInfoRecord> implements Record2<Integer, String> {

	private static final long serialVersionUID = -363374513;

	/**
	 * Setter for <code>members.analysis_user_info.user_id</code>. ユーザID
	 */
	public void setUserId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>members.analysis_user_info.user_id</code>. ユーザID
	 */
	public Integer getUserId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>members.analysis_user_info.select_projects</code>. 選択プロジェクト
	 */
	public void setSelectProjects(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>members.analysis_user_info.select_projects</code>. 選択プロジェクト
	 */
	public String getSelectProjects() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return AnalysisUserInfo.ANALYSIS_USER_INFO.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AnalysisUserInfo.ANALYSIS_USER_INFO.SELECT_PROJECTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getSelectProjects();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisUserInfoRecord value1(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisUserInfoRecord value2(String value) {
		setSelectProjects(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisUserInfoRecord values(Integer value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AnalysisUserInfoRecord
	 */
	public AnalysisUserInfoRecord() {
		super(AnalysisUserInfo.ANALYSIS_USER_INFO);
	}

	/**
	 * Create a detached, initialised AnalysisUserInfoRecord
	 */
	public AnalysisUserInfoRecord(Integer userId, String selectProjects) {
		super(AnalysisUserInfo.ANALYSIS_USER_INFO);

		setValue(0, userId);
		setValue(1, selectProjects);
	}
}
