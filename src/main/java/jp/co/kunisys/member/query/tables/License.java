/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.LicenseRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 資格免許
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class License extends TableImpl<LicenseRecord> {

	private static final long serialVersionUID = -1678541798;

	/**
	 * The reference instance of <code>members.license</code>
	 */
	public static final License LICENSE = new License();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LicenseRecord> getRecordType() {
		return LicenseRecord.class;
	}

	/**
	 * The column <code>members.license.user_id</code>. ユーザID
	 */
	public final TableField<LicenseRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "ユーザID");

	/**
	 * The column <code>members.license.no</code>. 連番
	 */
	public final TableField<LicenseRecord, Integer> NO = createField("no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "連番");

	/**
	 * The column <code>members.license.skill_no</code>. スキル番号
	 */
	public final TableField<LicenseRecord, Integer> SKILL_NO = createField("skill_no", org.jooq.impl.SQLDataType.INTEGER, this, "スキル番号");

	/**
	 * The column <code>members.license.pass</code>. 取得年月
	 */
	public final TableField<LicenseRecord, String> PASS = createField("pass", org.jooq.impl.SQLDataType.VARCHAR.length(6), this, "取得年月");

	/**
	 * The column <code>members.license.description</code>. 内容
	 */
	public final TableField<LicenseRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "内容");

	/**
	 * The column <code>members.license.comment</code>. コメント
	 */
	public final TableField<LicenseRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "コメント");

	/**
	 * The column <code>members.license.created</code>. 登録日時
	 */
	public final TableField<LicenseRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "登録日時");

	/**
	 * The column <code>members.license.created_user</code>. 登録ユーザ
	 */
	public final TableField<LicenseRecord, Integer> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.INTEGER, this, "登録ユーザ");

	/**
	 * The column <code>members.license.updated</code>. 更新日時
	 */
	public final TableField<LicenseRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.license.updated_user</code>. 更新ユーザ
	 */
	public final TableField<LicenseRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.license.deleted</code>. 削除日時
	 */
	public final TableField<LicenseRecord, Timestamp> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "削除日時");

	/**
	 * The column <code>members.license.deleted_user</code>. 削除ユーザ
	 */
	public final TableField<LicenseRecord, Integer> DELETED_USER = createField("deleted_user", org.jooq.impl.SQLDataType.INTEGER, this, "削除ユーザ");

	/**
	 * The column <code>members.license.version</code>. バージョン
	 */
	public final TableField<LicenseRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.license</code> table reference
	 */
	public License() {
		this("license", null);
	}

	/**
	 * Create an aliased <code>members.license</code> table reference
	 */
	public License(String alias) {
		this(alias, LICENSE);
	}

	private License(String alias, Table<LicenseRecord> aliased) {
		this(alias, aliased, null);
	}

	private License(String alias, Table<LicenseRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "資格免許");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LicenseRecord> getPrimaryKey() {
		return Keys.KEY_LICENSE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LicenseRecord>> getKeys() {
		return Arrays.<UniqueKey<LicenseRecord>>asList(Keys.KEY_LICENSE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<LicenseRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public License as(String alias) {
		return new License(alias, this);
	}

	/**
	 * Rename this table
	 */
	public License rename(String name) {
		return new License(name, null);
	}
}
