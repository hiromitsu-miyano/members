/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.GenderRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 性別
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gender extends TableImpl<GenderRecord> {

	private static final long serialVersionUID = -1422015961;

	/**
	 * The reference instance of <code>members.gender</code>
	 */
	public static final Gender GENDER = new Gender();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GenderRecord> getRecordType() {
		return GenderRecord.class;
	}

	/**
	 * The column <code>members.gender.gender_cd</code>. 性別コード
	 */
	public final TableField<GenderRecord, String> GENDER_CD = createField("gender_cd", org.jooq.impl.SQLDataType.VARCHAR.length(1).nullable(false), this, "性別コード");

	/**
	 * The column <code>members.gender.name</code>. 性別名
	 */
	public final TableField<GenderRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "性別名");

	/**
	 * Create a <code>members.gender</code> table reference
	 */
	public Gender() {
		this("gender", null);
	}

	/**
	 * Create an aliased <code>members.gender</code> table reference
	 */
	public Gender(String alias) {
		this(alias, GENDER);
	}

	private Gender(String alias, Table<GenderRecord> aliased) {
		this(alias, aliased, null);
	}

	private Gender(String alias, Table<GenderRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "性別");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<GenderRecord> getPrimaryKey() {
		return Keys.KEY_GENDER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<GenderRecord>> getKeys() {
		return Arrays.<UniqueKey<GenderRecord>>asList(Keys.KEY_GENDER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Gender as(String alias) {
		return new Gender(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Gender rename(String name) {
		return new Gender(name, null);
	}
}
