/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.IsmsAccessAuthUserRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * アクセス権限台帳対象者
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IsmsAccessAuthUser extends TableImpl<IsmsAccessAuthUserRecord> {

	private static final long serialVersionUID = -591452637;

	/**
	 * The reference instance of <code>members.isms_access_auth_user</code>
	 */
	public static final IsmsAccessAuthUser ISMS_ACCESS_AUTH_USER = new IsmsAccessAuthUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IsmsAccessAuthUserRecord> getRecordType() {
		return IsmsAccessAuthUserRecord.class;
	}

	/**
	 * The column <code>members.isms_access_auth_user.folder_id</code>. フォルダID
	 */
	public final TableField<IsmsAccessAuthUserRecord, Integer> FOLDER_ID = createField("folder_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "フォルダID");

	/**
	 * The column <code>members.isms_access_auth_user.auth_type</code>. 権限種類
	 */
	public final TableField<IsmsAccessAuthUserRecord, Integer> AUTH_TYPE = createField("auth_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "権限種類");

	/**
	 * The column <code>members.isms_access_auth_user.auth_user</code>. 対象者
	 */
	public final TableField<IsmsAccessAuthUserRecord, String> AUTH_USER = createField("auth_user", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "対象者");

	/**
	 * Create a <code>members.isms_access_auth_user</code> table reference
	 */
	public IsmsAccessAuthUser() {
		this("isms_access_auth_user", null);
	}

	/**
	 * Create an aliased <code>members.isms_access_auth_user</code> table reference
	 */
	public IsmsAccessAuthUser(String alias) {
		this(alias, ISMS_ACCESS_AUTH_USER);
	}

	private IsmsAccessAuthUser(String alias, Table<IsmsAccessAuthUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private IsmsAccessAuthUser(String alias, Table<IsmsAccessAuthUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "アクセス権限台帳対象者");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<IsmsAccessAuthUserRecord> getPrimaryKey() {
		return Keys.KEY_ISMS_ACCESS_AUTH_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<IsmsAccessAuthUserRecord>> getKeys() {
		return Arrays.<UniqueKey<IsmsAccessAuthUserRecord>>asList(Keys.KEY_ISMS_ACCESS_AUTH_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IsmsAccessAuthUser as(String alias) {
		return new IsmsAccessAuthUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public IsmsAccessAuthUser rename(String name) {
		return new IsmsAccessAuthUser(name, null);
	}
}
