/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.tables.AnalysisDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 分析日付
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisDateRecord extends UpdatableRecordImpl<AnalysisDateRecord> implements Record9<Date, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

	private static final long serialVersionUID = 2109637796;

	/**
	 * Setter for <code>members.analysis_date.analysis_date</code>. 分析日付
	 */
	public void setAnalysisDate(Date value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_date</code>. 分析日付
	 */
	public Date getAnalysisDate() {
		return (Date) getValue(0);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_day</code>. 分析日
	 */
	public void setAnalysisDay(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_day</code>. 分析日
	 */
	public Integer getAnalysisDay() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_weekday</code>. 分析曜日
	 */
	public void setAnalysisWeekday(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_weekday</code>. 分析曜日
	 */
	public Integer getAnalysisWeekday() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_week</code>. 分析週
	 */
	public void setAnalysisWeek(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_week</code>. 分析週
	 */
	public Integer getAnalysisWeek() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_month</code>. 分析月
	 */
	public void setAnalysisMonth(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_month</code>. 分析月
	 */
	public Integer getAnalysisMonth() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_year</code>. 分析年
	 */
	public void setAnalysisYear(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_year</code>. 分析年
	 */
	public Integer getAnalysisYear() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_nendo</code>. 分析年度
	 */
	public void setAnalysisNendo(Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_nendo</code>. 分析年度
	 */
	public Integer getAnalysisNendo() {
		return (Integer) getValue(6);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_half</code>. 分析半期
	 */
	public void setAnalysisHalf(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_half</code>. 分析半期
	 */
	public Integer getAnalysisHalf() {
		return (Integer) getValue(7);
	}

	/**
	 * Setter for <code>members.analysis_date.analysis_ki</code>. 分析期
	 */
	public void setAnalysisKi(Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>members.analysis_date.analysis_ki</code>. 分析期
	 */
	public Integer getAnalysisKi() {
		return (Integer) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Date> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Date, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<Date, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field1() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_DATE_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_DAY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_WEEKDAY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_WEEK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_MONTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_YEAR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field7() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_NENDO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_HALF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field9() {
		return AnalysisDate.ANALYSIS_DATE.ANALYSIS_KI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value1() {
		return getAnalysisDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getAnalysisDay();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getAnalysisWeekday();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAnalysisWeek();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getAnalysisMonth();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getAnalysisYear();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value7() {
		return getAnalysisNendo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getAnalysisHalf();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value9() {
		return getAnalysisKi();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value1(Date value) {
		setAnalysisDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value2(Integer value) {
		setAnalysisDay(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value3(Integer value) {
		setAnalysisWeekday(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value4(Integer value) {
		setAnalysisWeek(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value5(Integer value) {
		setAnalysisMonth(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value6(Integer value) {
		setAnalysisYear(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value7(Integer value) {
		setAnalysisNendo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value8(Integer value) {
		setAnalysisHalf(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord value9(Integer value) {
		setAnalysisKi(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDateRecord values(Date value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AnalysisDateRecord
	 */
	public AnalysisDateRecord() {
		super(AnalysisDate.ANALYSIS_DATE);
	}

	/**
	 * Create a detached, initialised AnalysisDateRecord
	 */
	public AnalysisDateRecord(Date analysisDate, Integer analysisDay, Integer analysisWeekday, Integer analysisWeek, Integer analysisMonth, Integer analysisYear, Integer analysisNendo, Integer analysisHalf, Integer analysisKi) {
		super(AnalysisDate.ANALYSIS_DATE);

		setValue(0, analysisDate);
		setValue(1, analysisDay);
		setValue(2, analysisWeekday);
		setValue(3, analysisWeek);
		setValue(4, analysisMonth);
		setValue(5, analysisYear);
		setValue(6, analysisNendo);
		setValue(7, analysisHalf);
		setValue(8, analysisKi);
	}
}
