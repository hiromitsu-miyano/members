/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.AnalysisProjectInfoRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 分析プロジェクト情報
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisProjectInfo extends TableImpl<AnalysisProjectInfoRecord> {

	private static final long serialVersionUID = -1926705193;

	/**
	 * The reference instance of <code>members.analysis_project_info</code>
	 */
	public static final AnalysisProjectInfo ANALYSIS_PROJECT_INFO = new AnalysisProjectInfo();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AnalysisProjectInfoRecord> getRecordType() {
		return AnalysisProjectInfoRecord.class;
	}

	/**
	 * The column <code>members.analysis_project_info.project_code</code>. プロジェクトコード
	 */
	public final TableField<AnalysisProjectInfoRecord, String> PROJECT_CODE = createField("project_code", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "プロジェクトコード");

	/**
	 * The column <code>members.analysis_project_info.project_type</code>. プロジェクト形態
	 */
	public final TableField<AnalysisProjectInfoRecord, String> PROJECT_TYPE = createField("project_type", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "プロジェクト形態");

	/**
	 * The column <code>members.analysis_project_info.description</code>. プロジェクト概要
	 */
	public final TableField<AnalysisProjectInfoRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "プロジェクト概要");

	/**
	 * The column <code>members.analysis_project_info.plan_man_hour_total</code>. 予定総工数
	 */
	public final TableField<AnalysisProjectInfoRecord, BigDecimal> PLAN_MAN_HOUR_TOTAL = createField("plan_man_hour_total", org.jooq.impl.SQLDataType.DECIMAL.precision(15, 3), this, "予定総工数");

	/**
	 * The column <code>members.analysis_project_info.created</code>. 登録日時
	 */
	public final TableField<AnalysisProjectInfoRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "登録日時");

	/**
	 * The column <code>members.analysis_project_info.created_user</code>. 登録ユーザ
	 */
	public final TableField<AnalysisProjectInfoRecord, Integer> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.INTEGER, this, "登録ユーザ");

	/**
	 * The column <code>members.analysis_project_info.updated</code>. 更新日時
	 */
	public final TableField<AnalysisProjectInfoRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.analysis_project_info.updated_user</code>. 更新ユーザ
	 */
	public final TableField<AnalysisProjectInfoRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.analysis_project_info.version</code>. バージョン
	 */
	public final TableField<AnalysisProjectInfoRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.analysis_project_info</code> table reference
	 */
	public AnalysisProjectInfo() {
		this("analysis_project_info", null);
	}

	/**
	 * Create an aliased <code>members.analysis_project_info</code> table reference
	 */
	public AnalysisProjectInfo(String alias) {
		this(alias, ANALYSIS_PROJECT_INFO);
	}

	private AnalysisProjectInfo(String alias, Table<AnalysisProjectInfoRecord> aliased) {
		this(alias, aliased, null);
	}

	private AnalysisProjectInfo(String alias, Table<AnalysisProjectInfoRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "分析プロジェクト情報");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AnalysisProjectInfoRecord> getPrimaryKey() {
		return Keys.KEY_ANALYSIS_PROJECT_INFO_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AnalysisProjectInfoRecord>> getKeys() {
		return Arrays.<UniqueKey<AnalysisProjectInfoRecord>>asList(Keys.KEY_ANALYSIS_PROJECT_INFO_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<AnalysisProjectInfoRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisProjectInfo as(String alias) {
		return new AnalysisProjectInfo(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AnalysisProjectInfo rename(String name) {
		return new AnalysisProjectInfo(name, null);
	}
}
