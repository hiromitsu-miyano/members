/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables.records;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.tables.AnalysisGenka;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 分析原価
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisGenkaRecord extends UpdatableRecordImpl<AnalysisGenkaRecord> implements Record12<Long, Long, Date, String, String, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal> {

	private static final long serialVersionUID = 696659061;

	/**
	 * Setter for <code>members.analysis_genka.id</code>. ID
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.id</code>. ID
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>members.analysis_genka.denpyo_no</code>. 伝票番号
	 */
	public void setDenpyoNo(Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.denpyo_no</code>. 伝票番号
	 */
	public Long getDenpyoNo() {
		return (Long) getValue(1);
	}

	/**
	 * Setter for <code>members.analysis_genka.denpyo_date</code>. 伝票日付
	 */
	public void setDenpyoDate(Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.denpyo_date</code>. 伝票日付
	 */
	public Date getDenpyoDate() {
		return (Date) getValue(2);
	}

	/**
	 * Setter for <code>members.analysis_genka.busho_code</code>. 部署コード
	 */
	public void setBushoCode(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.busho_code</code>. 部署コード
	 */
	public String getBushoCode() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>members.analysis_genka.project_code</code>. プロジェクトコード
	 */
	public void setProjectCode(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.project_code</code>. プロジェクトコード
	 */
	public String getProjectCode() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>members.analysis_genka.kamoku_code</code>. 科目コード
	 */
	public void setKamokuCode(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.kamoku_code</code>. 科目コード
	 */
	public String getKamokuCode() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>members.analysis_genka.remark</code>. 摘要
	 */
	public void setRemark(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.remark</code>. 摘要
	 */
	public String getRemark() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>members.analysis_genka.uriage</code>. 売上
	 */
	public void setUriage(BigDecimal value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.uriage</code>. 売上
	 */
	public BigDecimal getUriage() {
		return (BigDecimal) getValue(7);
	}

	/**
	 * Setter for <code>members.analysis_genka.shiire</code>. 仕入
	 */
	public void setShiire(BigDecimal value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.shiire</code>. 仕入
	 */
	public BigDecimal getShiire() {
		return (BigDecimal) getValue(8);
	}

	/**
	 * Setter for <code>members.analysis_genka.roumu</code>. 労務費
	 */
	public void setRoumu(BigDecimal value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.roumu</code>. 労務費
	 */
	public BigDecimal getRoumu() {
		return (BigDecimal) getValue(9);
	}

	/**
	 * Setter for <code>members.analysis_genka.gaichu</code>. 外注費
	 */
	public void setGaichu(BigDecimal value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.gaichu</code>. 外注費
	 */
	public BigDecimal getGaichu() {
		return (BigDecimal) getValue(10);
	}

	/**
	 * Setter for <code>members.analysis_genka.keihi</code>. 経費
	 */
	public void setKeihi(BigDecimal value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>members.analysis_genka.keihi</code>. 経費
	 */
	public BigDecimal getKeihi() {
		return (BigDecimal) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<Long, Long, Date, String, String, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<Long, Long, Date, String, String, String, String, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return AnalysisGenka.ANALYSIS_GENKA.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return AnalysisGenka.ANALYSIS_GENKA.DENPYO_NO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field3() {
		return AnalysisGenka.ANALYSIS_GENKA.DENPYO_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return AnalysisGenka.ANALYSIS_GENKA.BUSHO_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return AnalysisGenka.ANALYSIS_GENKA.PROJECT_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return AnalysisGenka.ANALYSIS_GENKA.KAMOKU_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return AnalysisGenka.ANALYSIS_GENKA.REMARK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field8() {
		return AnalysisGenka.ANALYSIS_GENKA.URIAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field9() {
		return AnalysisGenka.ANALYSIS_GENKA.SHIIRE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field10() {
		return AnalysisGenka.ANALYSIS_GENKA.ROUMU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field11() {
		return AnalysisGenka.ANALYSIS_GENKA.GAICHU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field12() {
		return AnalysisGenka.ANALYSIS_GENKA.KEIHI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getDenpyoNo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value3() {
		return getDenpyoDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getBushoCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getProjectCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getKamokuCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getRemark();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value8() {
		return getUriage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value9() {
		return getShiire();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value10() {
		return getRoumu();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value11() {
		return getGaichu();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value12() {
		return getKeihi();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value2(Long value) {
		setDenpyoNo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value3(Date value) {
		setDenpyoDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value4(String value) {
		setBushoCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value5(String value) {
		setProjectCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value6(String value) {
		setKamokuCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value7(String value) {
		setRemark(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value8(BigDecimal value) {
		setUriage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value9(BigDecimal value) {
		setShiire(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value10(BigDecimal value) {
		setRoumu(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value11(BigDecimal value) {
		setGaichu(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord value12(BigDecimal value) {
		setKeihi(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisGenkaRecord values(Long value1, Long value2, Date value3, String value4, String value5, String value6, String value7, BigDecimal value8, BigDecimal value9, BigDecimal value10, BigDecimal value11, BigDecimal value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AnalysisGenkaRecord
	 */
	public AnalysisGenkaRecord() {
		super(AnalysisGenka.ANALYSIS_GENKA);
	}

	/**
	 * Create a detached, initialised AnalysisGenkaRecord
	 */
	public AnalysisGenkaRecord(Long id, Long denpyoNo, Date denpyoDate, String bushoCode, String projectCode, String kamokuCode, String remark, BigDecimal uriage, BigDecimal shiire, BigDecimal roumu, BigDecimal gaichu, BigDecimal keihi) {
		super(AnalysisGenka.ANALYSIS_GENKA);

		setValue(0, id);
		setValue(1, denpyoNo);
		setValue(2, denpyoDate);
		setValue(3, bushoCode);
		setValue(4, projectCode);
		setValue(5, kamokuCode);
		setValue(6, remark);
		setValue(7, uriage);
		setValue(8, shiire);
		setValue(9, roumu);
		setValue(10, gaichu);
		setValue(11, keihi);
	}
}
