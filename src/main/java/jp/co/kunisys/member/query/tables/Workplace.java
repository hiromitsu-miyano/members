/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.WorkplaceRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 勤務先
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Workplace extends TableImpl<WorkplaceRecord> {

	private static final long serialVersionUID = -1114749523;

	/**
	 * The reference instance of <code>members.workplace</code>
	 */
	public static final Workplace WORKPLACE = new Workplace();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<WorkplaceRecord> getRecordType() {
		return WorkplaceRecord.class;
	}

	/**
	 * The column <code>members.workplace.workplace_id</code>. 勤務先ID
	 */
	public final TableField<WorkplaceRecord, Integer> WORKPLACE_ID = createField("workplace_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "勤務先ID");

	/**
	 * The column <code>members.workplace.name</code>. 勤務先名
	 */
	public final TableField<WorkplaceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "勤務先名");

	/**
	 * The column <code>members.workplace.workplace_type</code>. 勤務先区分
	 */
	public final TableField<WorkplaceRecord, String> WORKPLACE_TYPE = createField("workplace_type", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "勤務先区分");

	/**
	 * The column <code>members.workplace.remark</code>. 備考
	 */
	public final TableField<WorkplaceRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "備考");

	/**
	 * The column <code>members.workplace.created</code>. 登録日時
	 */
	public final TableField<WorkplaceRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "登録日時");

	/**
	 * The column <code>members.workplace.created_user</code>. 登録ユーザ
	 */
	public final TableField<WorkplaceRecord, Integer> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.INTEGER, this, "登録ユーザ");

	/**
	 * The column <code>members.workplace.updated</code>. 更新日時
	 */
	public final TableField<WorkplaceRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.workplace.updated_user</code>. 更新ユーザ
	 */
	public final TableField<WorkplaceRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.workplace.deleted</code>. 削除日時
	 */
	public final TableField<WorkplaceRecord, Timestamp> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "削除日時");

	/**
	 * The column <code>members.workplace.deleted_user</code>. 削除ユーザ
	 */
	public final TableField<WorkplaceRecord, Integer> DELETED_USER = createField("deleted_user", org.jooq.impl.SQLDataType.INTEGER, this, "削除ユーザ");

	/**
	 * The column <code>members.workplace.version</code>. バージョン
	 */
	public final TableField<WorkplaceRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.workplace</code> table reference
	 */
	public Workplace() {
		this("workplace", null);
	}

	/**
	 * Create an aliased <code>members.workplace</code> table reference
	 */
	public Workplace(String alias) {
		this(alias, WORKPLACE);
	}

	private Workplace(String alias, Table<WorkplaceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Workplace(String alias, Table<WorkplaceRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "勤務先");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<WorkplaceRecord> getPrimaryKey() {
		return Keys.KEY_WORKPLACE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<WorkplaceRecord>> getKeys() {
		return Arrays.<UniqueKey<WorkplaceRecord>>asList(Keys.KEY_WORKPLACE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<WorkplaceRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Workplace as(String alias) {
		return new Workplace(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Workplace rename(String name) {
		return new Workplace(name, null);
	}
}
