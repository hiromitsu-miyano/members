/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.IsmsAssetAssessManageRiskRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * アセスメント資産対応後脅威脆弱性
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IsmsAssetAssessManageRisk extends TableImpl<IsmsAssetAssessManageRiskRecord> {

	private static final long serialVersionUID = -1454693639;

	/**
	 * The reference instance of <code>members.isms_asset_assess_manage_risk</code>
	 */
	public static final IsmsAssetAssessManageRisk ISMS_ASSET_ASSESS_MANAGE_RISK = new IsmsAssetAssessManageRisk();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IsmsAssetAssessManageRiskRecord> getRecordType() {
		return IsmsAssetAssessManageRiskRecord.class;
	}

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.limit_date</code>. 締切日
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Timestamp> LIMIT_DATE = createField("limit_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "締切日");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.asset_id</code>. 資産ID
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Long> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "資産ID");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.threat_weak_id</code>. 脅威脆弱性ID
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> THREAT_WEAK_ID = createField("threat_weak_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "脅威脆弱性ID");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.weak_confidential</code>. 脆弱性機密性
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> WEAK_CONFIDENTIAL = createField("weak_confidential", org.jooq.impl.SQLDataType.INTEGER, this, "脆弱性機密性");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.weak_integrity</code>. 脆弱性完全性
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> WEAK_INTEGRITY = createField("weak_integrity", org.jooq.impl.SQLDataType.INTEGER, this, "脆弱性完全性");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.weak_availability</code>. 脆弱性可用性
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> WEAK_AVAILABILITY = createField("weak_availability", org.jooq.impl.SQLDataType.INTEGER, this, "脆弱性可用性");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.risk_confidential</code>. リスク値機密性
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> RISK_CONFIDENTIAL = createField("risk_confidential", org.jooq.impl.SQLDataType.INTEGER, this, "リスク値機密性");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.risk_integrity</code>. リスク値完全性
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> RISK_INTEGRITY = createField("risk_integrity", org.jooq.impl.SQLDataType.INTEGER, this, "リスク値完全性");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.risk_availability</code>. リスク値可用性
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> RISK_AVAILABILITY = createField("risk_availability", org.jooq.impl.SQLDataType.INTEGER, this, "リスク値可用性");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.judge</code>. 受容可否
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, Integer> JUDGE = createField("judge", org.jooq.impl.SQLDataType.INTEGER, this, "受容可否");

	/**
	 * The column <code>members.isms_asset_assess_manage_risk.remark</code>. 備考
	 */
	public final TableField<IsmsAssetAssessManageRiskRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "備考");

	/**
	 * Create a <code>members.isms_asset_assess_manage_risk</code> table reference
	 */
	public IsmsAssetAssessManageRisk() {
		this("isms_asset_assess_manage_risk", null);
	}

	/**
	 * Create an aliased <code>members.isms_asset_assess_manage_risk</code> table reference
	 */
	public IsmsAssetAssessManageRisk(String alias) {
		this(alias, ISMS_ASSET_ASSESS_MANAGE_RISK);
	}

	private IsmsAssetAssessManageRisk(String alias, Table<IsmsAssetAssessManageRiskRecord> aliased) {
		this(alias, aliased, null);
	}

	private IsmsAssetAssessManageRisk(String alias, Table<IsmsAssetAssessManageRiskRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "アセスメント資産対応後脅威脆弱性");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<IsmsAssetAssessManageRiskRecord> getPrimaryKey() {
		return Keys.KEY_ISMS_ASSET_ASSESS_MANAGE_RISK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<IsmsAssetAssessManageRiskRecord>> getKeys() {
		return Arrays.<UniqueKey<IsmsAssetAssessManageRiskRecord>>asList(Keys.KEY_ISMS_ASSET_ASSESS_MANAGE_RISK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IsmsAssetAssessManageRisk as(String alias) {
		return new IsmsAssetAssessManageRisk(alias, this);
	}

	/**
	 * Rename this table
	 */
	public IsmsAssetAssessManageRisk rename(String name) {
		return new IsmsAssetAssessManageRisk(name, null);
	}
}
