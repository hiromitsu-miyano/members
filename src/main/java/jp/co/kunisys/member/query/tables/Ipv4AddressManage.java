/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.Ipv4AddressManageRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * IPV4アドレス管理
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ipv4AddressManage extends TableImpl<Ipv4AddressManageRecord> {

	private static final long serialVersionUID = 1785600415;

	/**
	 * The reference instance of <code>members.ipv4_address_manage</code>
	 */
	public static final Ipv4AddressManage IPV4_ADDRESS_MANAGE = new Ipv4AddressManage();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Ipv4AddressManageRecord> getRecordType() {
		return Ipv4AddressManageRecord.class;
	}

	/**
	 * The column <code>members.ipv4_address_manage.ip_address1</code>. ＩＰアドレス１
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> IP_ADDRESS1 = createField("ip_address1", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "ＩＰアドレス１");

	/**
	 * The column <code>members.ipv4_address_manage.ip_address2</code>. ＩＰアドレス２
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> IP_ADDRESS2 = createField("ip_address2", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "ＩＰアドレス２");

	/**
	 * The column <code>members.ipv4_address_manage.ip_address3</code>. ＩＰアドレス３
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> IP_ADDRESS3 = createField("ip_address3", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "ＩＰアドレス３");

	/**
	 * The column <code>members.ipv4_address_manage.ip_address4</code>. ＩＰアドレス４
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> IP_ADDRESS4 = createField("ip_address4", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "ＩＰアドレス４");

	/**
	 * The column <code>members.ipv4_address_manage.unavailable_flag</code>. 利用不可フラグ
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> UNAVAILABLE_FLAG = createField("unavailable_flag", org.jooq.impl.SQLDataType.INTEGER, this, "利用不可フラグ");

	/**
	 * The column <code>members.ipv4_address_manage.hostname</code>. ホスト名
	 */
	public final TableField<Ipv4AddressManageRecord, String> HOSTNAME = createField("hostname", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "ホスト名");

	/**
	 * The column <code>members.ipv4_address_manage.osname</code>. ＯＳ名
	 */
	public final TableField<Ipv4AddressManageRecord, String> OSNAME = createField("osname", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "ＯＳ名");

	/**
	 * The column <code>members.ipv4_address_manage.description</code>. 利用目的
	 */
	public final TableField<Ipv4AddressManageRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "利用目的");

	/**
	 * The column <code>members.ipv4_address_manage.lease_date</code>. 貸出日
	 */
	public final TableField<Ipv4AddressManageRecord, Timestamp> LEASE_DATE = createField("lease_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "貸出日");

	/**
	 * The column <code>members.ipv4_address_manage.lease_limit</code>. 貸出期限
	 */
	public final TableField<Ipv4AddressManageRecord, Timestamp> LEASE_LIMIT = createField("lease_limit", org.jooq.impl.SQLDataType.TIMESTAMP, this, "貸出期限");

	/**
	 * The column <code>members.ipv4_address_manage.nolimit_flag</code>. 永続フラグ
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> NOLIMIT_FLAG = createField("nolimit_flag", org.jooq.impl.SQLDataType.INTEGER, this, "永続フラグ");

	/**
	 * The column <code>members.ipv4_address_manage.applicant</code>. 申請者
	 */
	public final TableField<Ipv4AddressManageRecord, String> APPLICANT = createField("applicant", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "申請者");

	/**
	 * The column <code>members.ipv4_address_manage.remark</code>. 備考
	 */
	public final TableField<Ipv4AddressManageRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "備考");

	/**
	 * The column <code>members.ipv4_address_manage.updated</code>. 更新日時
	 */
	public final TableField<Ipv4AddressManageRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.ipv4_address_manage.updated_user</code>. 更新ユーザ
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.ipv4_address_manage.version</code>. バージョン
	 */
	public final TableField<Ipv4AddressManageRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.ipv4_address_manage</code> table reference
	 */
	public Ipv4AddressManage() {
		this("ipv4_address_manage", null);
	}

	/**
	 * Create an aliased <code>members.ipv4_address_manage</code> table reference
	 */
	public Ipv4AddressManage(String alias) {
		this(alias, IPV4_ADDRESS_MANAGE);
	}

	private Ipv4AddressManage(String alias, Table<Ipv4AddressManageRecord> aliased) {
		this(alias, aliased, null);
	}

	private Ipv4AddressManage(String alias, Table<Ipv4AddressManageRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "IPV4アドレス管理");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Ipv4AddressManageRecord> getPrimaryKey() {
		return Keys.KEY_IPV4_ADDRESS_MANAGE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Ipv4AddressManageRecord>> getKeys() {
		return Arrays.<UniqueKey<Ipv4AddressManageRecord>>asList(Keys.KEY_IPV4_ADDRESS_MANAGE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<Ipv4AddressManageRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManage as(String alias) {
		return new Ipv4AddressManage(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Ipv4AddressManage rename(String name) {
		return new Ipv4AddressManage(name, null);
	}
}
