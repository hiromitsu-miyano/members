/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.tables.Ipv4AddressManage;

import org.jooq.Field;
import org.jooq.Record16;
import org.jooq.Record4;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * IPV4アドレス管理
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ipv4AddressManageRecord extends UpdatableRecordImpl<Ipv4AddressManageRecord> implements Record16<Integer, Integer, Integer, Integer, Integer, String, String, String, Timestamp, Timestamp, Integer, String, String, Timestamp, Integer, Integer> {

	private static final long serialVersionUID = -414664130;

	/**
	 * Setter for <code>members.ipv4_address_manage.ip_address1</code>. ＩＰアドレス１
	 */
	public void setIpAddress1(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.ip_address1</code>. ＩＰアドレス１
	 */
	public Integer getIpAddress1() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.ip_address2</code>. ＩＰアドレス２
	 */
	public void setIpAddress2(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.ip_address2</code>. ＩＰアドレス２
	 */
	public Integer getIpAddress2() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.ip_address3</code>. ＩＰアドレス３
	 */
	public void setIpAddress3(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.ip_address3</code>. ＩＰアドレス３
	 */
	public Integer getIpAddress3() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.ip_address4</code>. ＩＰアドレス４
	 */
	public void setIpAddress4(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.ip_address4</code>. ＩＰアドレス４
	 */
	public Integer getIpAddress4() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.unavailable_flag</code>. 利用不可フラグ
	 */
	public void setUnavailableFlag(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.unavailable_flag</code>. 利用不可フラグ
	 */
	public Integer getUnavailableFlag() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.hostname</code>. ホスト名
	 */
	public void setHostname(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.hostname</code>. ホスト名
	 */
	public String getHostname() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.osname</code>. ＯＳ名
	 */
	public void setOsname(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.osname</code>. ＯＳ名
	 */
	public String getOsname() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.description</code>. 利用目的
	 */
	public void setDescription(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.description</code>. 利用目的
	 */
	public String getDescription() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.lease_date</code>. 貸出日
	 */
	public void setLeaseDate(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.lease_date</code>. 貸出日
	 */
	public Timestamp getLeaseDate() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.lease_limit</code>. 貸出期限
	 */
	public void setLeaseLimit(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.lease_limit</code>. 貸出期限
	 */
	public Timestamp getLeaseLimit() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.nolimit_flag</code>. 永続フラグ
	 */
	public void setNolimitFlag(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.nolimit_flag</code>. 永続フラグ
	 */
	public Integer getNolimitFlag() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.applicant</code>. 申請者
	 */
	public void setApplicant(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.applicant</code>. 申請者
	 */
	public String getApplicant() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.remark</code>. 備考
	 */
	public void setRemark(String value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.remark</code>. 備考
	 */
	public String getRemark() {
		return (String) getValue(12);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.updated</code>. 更新日時
	 */
	public void setUpdated(Timestamp value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.updated</code>. 更新日時
	 */
	public Timestamp getUpdated() {
		return (Timestamp) getValue(13);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.updated_user</code>. 更新ユーザ
	 */
	public void setUpdatedUser(Integer value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.updated_user</code>. 更新ユーザ
	 */
	public Integer getUpdatedUser() {
		return (Integer) getValue(14);
	}

	/**
	 * Setter for <code>members.ipv4_address_manage.version</code>. バージョン
	 */
	public void setVersion(Integer value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>members.ipv4_address_manage.version</code>. バージョン
	 */
	public Integer getVersion() {
		return (Integer) getValue(15);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record4<Integer, Integer, Integer, Integer> key() {
		return (Record4) super.key();
	}

	// -------------------------------------------------------------------------
	// Record16 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row16<Integer, Integer, Integer, Integer, Integer, String, String, String, Timestamp, Timestamp, Integer, String, String, Timestamp, Integer, Integer> fieldsRow() {
		return (Row16) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row16<Integer, Integer, Integer, Integer, Integer, String, String, String, Timestamp, Timestamp, Integer, String, String, Timestamp, Integer, Integer> valuesRow() {
		return (Row16) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.IP_ADDRESS1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.IP_ADDRESS2;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.IP_ADDRESS3;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.IP_ADDRESS4;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.UNAVAILABLE_FLAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.HOSTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.OSNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.LEASE_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.LEASE_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.NOLIMIT_FLAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.APPLICANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field13() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.REMARK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field14() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.UPDATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field15() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.UPDATED_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field16() {
		return Ipv4AddressManage.IPV4_ADDRESS_MANAGE.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIpAddress1();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getIpAddress2();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getIpAddress3();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getIpAddress4();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getUnavailableFlag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getHostname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getOsname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getLeaseDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getLeaseLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getNolimitFlag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getApplicant();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value13() {
		return getRemark();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value14() {
		return getUpdated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value15() {
		return getUpdatedUser();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value16() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value1(Integer value) {
		setIpAddress1(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value2(Integer value) {
		setIpAddress2(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value3(Integer value) {
		setIpAddress3(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value4(Integer value) {
		setIpAddress4(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value5(Integer value) {
		setUnavailableFlag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value6(String value) {
		setHostname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value7(String value) {
		setOsname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value8(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value9(Timestamp value) {
		setLeaseDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value10(Timestamp value) {
		setLeaseLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value11(Integer value) {
		setNolimitFlag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value12(String value) {
		setApplicant(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value13(String value) {
		setRemark(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value14(Timestamp value) {
		setUpdated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value15(Integer value) {
		setUpdatedUser(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord value16(Integer value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ipv4AddressManageRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, String value6, String value7, String value8, Timestamp value9, Timestamp value10, Integer value11, String value12, String value13, Timestamp value14, Integer value15, Integer value16) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached Ipv4AddressManageRecord
	 */
	public Ipv4AddressManageRecord() {
		super(Ipv4AddressManage.IPV4_ADDRESS_MANAGE);
	}

	/**
	 * Create a detached, initialised Ipv4AddressManageRecord
	 */
	public Ipv4AddressManageRecord(Integer ipAddress1, Integer ipAddress2, Integer ipAddress3, Integer ipAddress4, Integer unavailableFlag, String hostname, String osname, String description, Timestamp leaseDate, Timestamp leaseLimit, Integer nolimitFlag, String applicant, String remark, Timestamp updated, Integer updatedUser, Integer version) {
		super(Ipv4AddressManage.IPV4_ADDRESS_MANAGE);

		setValue(0, ipAddress1);
		setValue(1, ipAddress2);
		setValue(2, ipAddress3);
		setValue(3, ipAddress4);
		setValue(4, unavailableFlag);
		setValue(5, hostname);
		setValue(6, osname);
		setValue(7, description);
		setValue(8, leaseDate);
		setValue(9, leaseLimit);
		setValue(10, nolimitFlag);
		setValue(11, applicant);
		setValue(12, remark);
		setValue(13, updated);
		setValue(14, updatedUser);
		setValue(15, version);
	}
}
