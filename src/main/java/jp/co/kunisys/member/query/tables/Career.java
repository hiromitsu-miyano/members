/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.CareerRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 業務経歴
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Career extends TableImpl<CareerRecord> {

	private static final long serialVersionUID = -182673116;

	/**
	 * The reference instance of <code>members.career</code>
	 */
	public static final Career CAREER = new Career();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CareerRecord> getRecordType() {
		return CareerRecord.class;
	}

	/**
	 * The column <code>members.career.user_id</code>. ユーザID
	 */
	public final TableField<CareerRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "ユーザID");

	/**
	 * The column <code>members.career.experience_years</code>. 入社時経験年数
	 */
	public final TableField<CareerRecord, Integer> EXPERIENCE_YEARS = createField("experience_years", org.jooq.impl.SQLDataType.INTEGER, this, "入社時経験年数");

	/**
	 * The column <code>members.career.created</code>. 登録日時
	 */
	public final TableField<CareerRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "登録日時");

	/**
	 * The column <code>members.career.created_user</code>. 登録ユーザ
	 */
	public final TableField<CareerRecord, Integer> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.INTEGER, this, "登録ユーザ");

	/**
	 * The column <code>members.career.updated</code>. 更新日時
	 */
	public final TableField<CareerRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.career.updated_user</code>. 更新ユーザ
	 */
	public final TableField<CareerRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.career.deleted</code>. 削除日時
	 */
	public final TableField<CareerRecord, Timestamp> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "削除日時");

	/**
	 * The column <code>members.career.deleted_user</code>. 削除ユーザ
	 */
	public final TableField<CareerRecord, Integer> DELETED_USER = createField("deleted_user", org.jooq.impl.SQLDataType.INTEGER, this, "削除ユーザ");

	/**
	 * The column <code>members.career.version</code>. バージョン
	 */
	public final TableField<CareerRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.career</code> table reference
	 */
	public Career() {
		this("career", null);
	}

	/**
	 * Create an aliased <code>members.career</code> table reference
	 */
	public Career(String alias) {
		this(alias, CAREER);
	}

	private Career(String alias, Table<CareerRecord> aliased) {
		this(alias, aliased, null);
	}

	private Career(String alias, Table<CareerRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "業務経歴");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CareerRecord> getPrimaryKey() {
		return Keys.KEY_CAREER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CareerRecord>> getKeys() {
		return Arrays.<UniqueKey<CareerRecord>>asList(Keys.KEY_CAREER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<CareerRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Career as(String alias) {
		return new Career(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Career rename(String name) {
		return new Career(name, null);
	}
}
