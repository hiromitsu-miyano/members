/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.UserInfoFamilyRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 家族情報
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoFamily extends TableImpl<UserInfoFamilyRecord> {

	private static final long serialVersionUID = 1128214336;

	/**
	 * The reference instance of <code>members.user_info_family</code>
	 */
	public static final UserInfoFamily USER_INFO_FAMILY = new UserInfoFamily();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserInfoFamilyRecord> getRecordType() {
		return UserInfoFamilyRecord.class;
	}

	/**
	 * The column <code>members.user_info_family.user_id</code>. ユーザID
	 */
	public final TableField<UserInfoFamilyRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "ユーザID");

	/**
	 * The column <code>members.user_info_family.no</code>. 連番
	 */
	public final TableField<UserInfoFamilyRecord, Integer> NO = createField("no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "連番");

	/**
	 * The column <code>members.user_info_family.relation_type</code>. 続柄区分
	 */
	public final TableField<UserInfoFamilyRecord, String> RELATION_TYPE = createField("relation_type", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "続柄区分");

	/**
	 * The column <code>members.user_info_family.name</code>. 氏名
	 */
	public final TableField<UserInfoFamilyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "氏名");

	/**
	 * The column <code>members.user_info_family.birthday</code>. 生年月日
	 */
	public final TableField<UserInfoFamilyRecord, Date> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.DATE, this, "生年月日");

	/**
	 * The column <code>members.user_info_family.stay_type</code>. 同居区分
	 */
	public final TableField<UserInfoFamilyRecord, String> STAY_TYPE = createField("stay_type", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "同居区分");

	/**
	 * The column <code>members.user_info_family.support_type_tax</code>. 税扶養区分
	 */
	public final TableField<UserInfoFamilyRecord, String> SUPPORT_TYPE_TAX = createField("support_type_tax", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "税扶養区分");

	/**
	 * The column <code>members.user_info_family.support_type_insurance</code>. 社保扶養区分
	 */
	public final TableField<UserInfoFamilyRecord, String> SUPPORT_TYPE_INSURANCE = createField("support_type_insurance", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "社保扶養区分");

	/**
	 * The column <code>members.user_info_family.comment</code>. コメント
	 */
	public final TableField<UserInfoFamilyRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "コメント");

	/**
	 * The column <code>members.user_info_family.created</code>. 登録日時
	 */
	public final TableField<UserInfoFamilyRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "登録日時");

	/**
	 * The column <code>members.user_info_family.created_user</code>. 登録ユーザ
	 */
	public final TableField<UserInfoFamilyRecord, Integer> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.INTEGER, this, "登録ユーザ");

	/**
	 * The column <code>members.user_info_family.updated</code>. 更新日時
	 */
	public final TableField<UserInfoFamilyRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.user_info_family.updated_user</code>. 更新ユーザ
	 */
	public final TableField<UserInfoFamilyRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.user_info_family.deleted</code>. 削除日時
	 */
	public final TableField<UserInfoFamilyRecord, Timestamp> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "削除日時");

	/**
	 * The column <code>members.user_info_family.deleted_user</code>. 削除ユーザ
	 */
	public final TableField<UserInfoFamilyRecord, Integer> DELETED_USER = createField("deleted_user", org.jooq.impl.SQLDataType.INTEGER, this, "削除ユーザ");

	/**
	 * The column <code>members.user_info_family.version</code>. バージョン
	 */
	public final TableField<UserInfoFamilyRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.user_info_family</code> table reference
	 */
	public UserInfoFamily() {
		this("user_info_family", null);
	}

	/**
	 * Create an aliased <code>members.user_info_family</code> table reference
	 */
	public UserInfoFamily(String alias) {
		this(alias, USER_INFO_FAMILY);
	}

	private UserInfoFamily(String alias, Table<UserInfoFamilyRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserInfoFamily(String alias, Table<UserInfoFamilyRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "家族情報");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserInfoFamilyRecord> getPrimaryKey() {
		return Keys.KEY_USER_INFO_FAMILY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserInfoFamilyRecord>> getKeys() {
		return Arrays.<UniqueKey<UserInfoFamilyRecord>>asList(Keys.KEY_USER_INFO_FAMILY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<UserInfoFamilyRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserInfoFamily as(String alias) {
		return new UserInfoFamily(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserInfoFamily rename(String name) {
		return new UserInfoFamily(name, null);
	}
}
