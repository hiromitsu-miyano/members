/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.PostRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 職位
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Post extends TableImpl<PostRecord> {

	private static final long serialVersionUID = 1944487553;

	/**
	 * The reference instance of <code>members.post</code>
	 */
	public static final Post POST = new Post();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PostRecord> getRecordType() {
		return PostRecord.class;
	}

	/**
	 * The column <code>members.post.post_cd</code>. 職位コード
	 */
	public final TableField<PostRecord, String> POST_CD = createField("post_cd", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "職位コード");

	/**
	 * The column <code>members.post.name</code>. 職位名
	 */
	public final TableField<PostRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "職位名");

	/**
	 * Create a <code>members.post</code> table reference
	 */
	public Post() {
		this("post", null);
	}

	/**
	 * Create an aliased <code>members.post</code> table reference
	 */
	public Post(String alias) {
		this(alias, POST);
	}

	private Post(String alias, Table<PostRecord> aliased) {
		this(alias, aliased, null);
	}

	private Post(String alias, Table<PostRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "職位");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PostRecord> getPrimaryKey() {
		return Keys.KEY_POST_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PostRecord>> getKeys() {
		return Arrays.<UniqueKey<PostRecord>>asList(Keys.KEY_POST_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Post as(String alias) {
		return new Post(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Post rename(String name) {
		return new Post(name, null);
	}
}
