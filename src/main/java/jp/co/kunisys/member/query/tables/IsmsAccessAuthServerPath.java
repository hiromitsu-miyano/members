/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.IsmsAccessAuthServerPathRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * アクセス権限台帳サーバパス
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IsmsAccessAuthServerPath extends TableImpl<IsmsAccessAuthServerPathRecord> {

	private static final long serialVersionUID = 1658150380;

	/**
	 * The reference instance of <code>members.isms_access_auth_server_path</code>
	 */
	public static final IsmsAccessAuthServerPath ISMS_ACCESS_AUTH_SERVER_PATH = new IsmsAccessAuthServerPath();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IsmsAccessAuthServerPathRecord> getRecordType() {
		return IsmsAccessAuthServerPathRecord.class;
	}

	/**
	 * The column <code>members.isms_access_auth_server_path.folder_id</code>. フォルダID
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> FOLDER_ID = createField("folder_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "フォルダID");

	/**
	 * The column <code>members.isms_access_auth_server_path.folder_name</code>. フォルダ名称
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, String> FOLDER_NAME = createField("folder_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "フォルダ名称");

	/**
	 * The column <code>members.isms_access_auth_server_path.level</code>. フォルダ階層
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "フォルダ階層");

	/**
	 * The column <code>members.isms_access_auth_server_path.sortkey</code>. 並び順
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> SORTKEY = createField("sortkey", org.jooq.impl.SQLDataType.INTEGER, this, "並び順");

	/**
	 * The column <code>members.isms_access_auth_server_path.manager_id</code>. 管理者ID
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> MANAGER_ID = createField("manager_id", org.jooq.impl.SQLDataType.INTEGER, this, "管理者ID");

	/**
	 * The column <code>members.isms_access_auth_server_path.worker_id</code>. 作業者ID
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> WORKER_ID = createField("worker_id", org.jooq.impl.SQLDataType.INTEGER, this, "作業者ID");

	/**
	 * The column <code>members.isms_access_auth_server_path.auth_set_date</code>. 設定日
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Timestamp> AUTH_SET_DATE = createField("auth_set_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "設定日");

	/**
	 * The column <code>members.isms_access_auth_server_path.sheet_divide</code>. シート分け
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> SHEET_DIVIDE = createField("sheet_divide", org.jooq.impl.SQLDataType.INTEGER, this, "シート分け");

	/**
	 * The column <code>members.isms_access_auth_server_path.asset_id</code>. 資産ID
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Long> ASSET_ID = createField("asset_id", org.jooq.impl.SQLDataType.BIGINT, this, "資産ID");

	/**
	 * The column <code>members.isms_access_auth_server_path.created</code>. 登録日時
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "登録日時");

	/**
	 * The column <code>members.isms_access_auth_server_path.created_user</code>. 登録ユーザ
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.INTEGER, this, "登録ユーザ");

	/**
	 * The column <code>members.isms_access_auth_server_path.updated</code>. 更新日時
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新日時");

	/**
	 * The column <code>members.isms_access_auth_server_path.updated_user</code>. 更新ユーザ
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.INTEGER, this, "更新ユーザ");

	/**
	 * The column <code>members.isms_access_auth_server_path.deleted</code>. 削除日時
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Timestamp> DELETED = createField("deleted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "削除日時");

	/**
	 * The column <code>members.isms_access_auth_server_path.deleted_user</code>. 削除ユーザ
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> DELETED_USER = createField("deleted_user", org.jooq.impl.SQLDataType.INTEGER, this, "削除ユーザ");

	/**
	 * The column <code>members.isms_access_auth_server_path.version</code>. バージョン
	 */
	public final TableField<IsmsAccessAuthServerPathRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER, this, "バージョン");

	/**
	 * Create a <code>members.isms_access_auth_server_path</code> table reference
	 */
	public IsmsAccessAuthServerPath() {
		this("isms_access_auth_server_path", null);
	}

	/**
	 * Create an aliased <code>members.isms_access_auth_server_path</code> table reference
	 */
	public IsmsAccessAuthServerPath(String alias) {
		this(alias, ISMS_ACCESS_AUTH_SERVER_PATH);
	}

	private IsmsAccessAuthServerPath(String alias, Table<IsmsAccessAuthServerPathRecord> aliased) {
		this(alias, aliased, null);
	}

	private IsmsAccessAuthServerPath(String alias, Table<IsmsAccessAuthServerPathRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "アクセス権限台帳サーバパス");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<IsmsAccessAuthServerPathRecord> getPrimaryKey() {
		return Keys.KEY_ISMS_ACCESS_AUTH_SERVER_PATH_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<IsmsAccessAuthServerPathRecord>> getKeys() {
		return Arrays.<UniqueKey<IsmsAccessAuthServerPathRecord>>asList(Keys.KEY_ISMS_ACCESS_AUTH_SERVER_PATH_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableField<IsmsAccessAuthServerPathRecord, Integer> getRecordVersion() {
		return VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IsmsAccessAuthServerPath as(String alias) {
		return new IsmsAccessAuthServerPath(alias, this);
	}

	/**
	 * Rename this table
	 */
	public IsmsAccessAuthServerPath rename(String name) {
		return new IsmsAccessAuthServerPath(name, null);
	}
}
