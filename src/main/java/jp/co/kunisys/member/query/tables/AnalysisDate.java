/**
 * This class is generated by jOOQ
 */
package jp.co.kunisys.member.query.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jp.co.kunisys.member.query.Keys;
import jp.co.kunisys.member.query.Members;
import jp.co.kunisys.member.query.tables.records.AnalysisDateRecord;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 分析日付
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnalysisDate extends TableImpl<AnalysisDateRecord> {

	private static final long serialVersionUID = -608882747;

	/**
	 * The reference instance of <code>members.analysis_date</code>
	 */
	public static final AnalysisDate ANALYSIS_DATE = new AnalysisDate();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AnalysisDateRecord> getRecordType() {
		return AnalysisDateRecord.class;
	}

	/**
	 * The column <code>members.analysis_date.analysis_date</code>. 分析日付
	 */
	public final TableField<AnalysisDateRecord, Date> ANALYSIS_DATE_ = createField("analysis_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "分析日付");

	/**
	 * The column <code>members.analysis_date.analysis_day</code>. 分析日
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_DAY = createField("analysis_day", org.jooq.impl.SQLDataType.INTEGER, this, "分析日");

	/**
	 * The column <code>members.analysis_date.analysis_weekday</code>. 分析曜日
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_WEEKDAY = createField("analysis_weekday", org.jooq.impl.SQLDataType.INTEGER, this, "分析曜日");

	/**
	 * The column <code>members.analysis_date.analysis_week</code>. 分析週
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_WEEK = createField("analysis_week", org.jooq.impl.SQLDataType.INTEGER, this, "分析週");

	/**
	 * The column <code>members.analysis_date.analysis_month</code>. 分析月
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_MONTH = createField("analysis_month", org.jooq.impl.SQLDataType.INTEGER, this, "分析月");

	/**
	 * The column <code>members.analysis_date.analysis_year</code>. 分析年
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_YEAR = createField("analysis_year", org.jooq.impl.SQLDataType.INTEGER, this, "分析年");

	/**
	 * The column <code>members.analysis_date.analysis_nendo</code>. 分析年度
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_NENDO = createField("analysis_nendo", org.jooq.impl.SQLDataType.INTEGER, this, "分析年度");

	/**
	 * The column <code>members.analysis_date.analysis_half</code>. 分析半期
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_HALF = createField("analysis_half", org.jooq.impl.SQLDataType.INTEGER, this, "分析半期");

	/**
	 * The column <code>members.analysis_date.analysis_ki</code>. 分析期
	 */
	public final TableField<AnalysisDateRecord, Integer> ANALYSIS_KI = createField("analysis_ki", org.jooq.impl.SQLDataType.INTEGER, this, "分析期");

	/**
	 * Create a <code>members.analysis_date</code> table reference
	 */
	public AnalysisDate() {
		this("analysis_date", null);
	}

	/**
	 * Create an aliased <code>members.analysis_date</code> table reference
	 */
	public AnalysisDate(String alias) {
		this(alias, ANALYSIS_DATE);
	}

	private AnalysisDate(String alias, Table<AnalysisDateRecord> aliased) {
		this(alias, aliased, null);
	}

	private AnalysisDate(String alias, Table<AnalysisDateRecord> aliased, Field<?>[] parameters) {
		super(alias, Members.MEMBERS, aliased, parameters, "分析日付");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AnalysisDateRecord> getPrimaryKey() {
		return Keys.KEY_ANALYSIS_DATE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AnalysisDateRecord>> getKeys() {
		return Arrays.<UniqueKey<AnalysisDateRecord>>asList(Keys.KEY_ANALYSIS_DATE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AnalysisDate as(String alias) {
		return new AnalysisDate(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AnalysisDate rename(String name) {
		return new AnalysisDate(name, null);
	}
}
